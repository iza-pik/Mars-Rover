{"version":3,"sources":["components/Grid/index.jsx","components/Input/index.jsx","components/Controls/index.jsx","components/Cell/index.jsx","components/Rover/index.jsx","assets/images/skyStarsPattern.jpg","App.js","reportWebVitals.js","index.js"],"names":["Input","props","Controls","value","onChange","onSubmit","type","className","Cell","children","Rover","dir","style","transform","gridData","y","row","x","push","undefined","Grid","roverState","map","_","App","useState","setRoverState","path","setPath","backgroundImage","starrySky","e","target","replace","toLowerCase","preventDefault","i","setTimeout","console","log","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe2fb8b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Cell from \"../Cell\";\r\nimport Rover from \"../Rover\";\r\nimport \"./Grid.css\";\r\n\r\nconst gridData = [];\r\n\r\nfor (let y = 0; y < 10; y++) {\r\n  const row = [];\r\n  for (let x = 0; x < 10; x++) row.push(undefined);\r\n  gridData.push(row);\r\n}\r\n\r\nconst Grid = ({ roverState }) => {\r\n  return (\r\n    <div className=\"grid\">\r\n      {gridData.map((row, y) => (\r\n        <div className=\"row\">\r\n          {row.map((_, x) => (\r\n            <Cell key={x + y}>\r\n              {x === roverState.x && y === roverState.y ? (\r\n                <Rover dir={roverState.dir} />\r\n              ) : null}\r\n            </Cell>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = ({ ...props }) => <input {...props} />;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport Input from \"../Input\";\r\n\r\nconst Controls = ({ value, onChange, onSubmit }) => (\r\n  <form onSubmit={onSubmit}>\r\n    <Input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className=\"inputField\"\r\n    />\r\n    <Input type=\"submit\" value=\"Go!\" className=\"submitButton\" />\r\n  </form>\r\n);\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport \"./Cell.css\";\r\n\r\nconst Cell = ({ children }) => <div className=\"cell\">{children}</div>;\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport \"./Rover.css\";\r\n\r\nconst Rover = ({ dir }) => (\r\n  <div style={{ transform: `rotate(${dir * 90}deg)` }} className=\"rover\">\r\n    ^\r\n  </div>\r\n);\r\n\r\nexport default Rover;\r\n","export default __webpack_public_path__ + \"static/media/skyStarsPattern.a26f7e44.jpg\";","import { useState } from \"react\";\nimport \"./App.css\";\nimport Controls from \"./components/Controls\";\nimport Grid from \"./components/Grid/index.jsx\";\nimport starrySky from \"./assets/images/skyStarsPattern.jpg\";\n\nconst App = () => {\n  const [roverState, setRoverState] = useState({ x: 0, y: 0, dir: 0 });\n  const [path, setPath] = useState(\"\");\n  const onPathChange = (e) => {\n    setPath(e.target.value.replace(/[^lfr]/gi, \"\").toLowerCase());\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let { dir, x, y } = roverState;\n    for (let i = 0; i < path.length; i++) {\n      /* eslint no-loop-func: \"off\" */\n      setTimeout(() => {\n        if (path[i] === \"l\") {\n          dir = dir === 0 ? 3 : dir - 1;\n        } else if (path[i] === \"r\") {\n          dir = dir >= 3 ? 0 : dir + 1;\n        } else if (path[i] === \"f\") {\n          switch (dir) {\n            // N:\n            case 0:\n              if (y > 0) {\n                y--;\n              }\n              break;\n            // E:\n            case 1:\n              if (x < 9) {\n                x++;\n              }\n              break;\n            // S:\n            case 2:\n              if (y < 9) {\n                y++;\n              }\n              break;\n            // W:\n            case 3:\n              if (x > 0) {\n                x--;\n              }\n              break;\n            default:\n              break;\n          }\n        }\n        console.log(roverState);\n        setRoverState({ x, y, dir });\n      }, 500 * i);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"mars\">\n        <Grid roverState={roverState} />\n      </div>\n      <div className=\"space\" style={{ backgroundImage: `url(${starrySky})` }}>\n        <Controls value={path} onChange={onPathChange} onSubmit={onSubmit} />\n        <h2>\n          Steer the Mars Rover by typing in a path using the following commands:\n        </h2>\n        <ul>\n          <li>f: to move forward</li>\n          <li>r: to turn right</li>\n          <li>l: to turn left</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}